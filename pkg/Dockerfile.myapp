FROM golang:alpine AS mem-source
WORKDIR $GOPATH/src/github.com/christiantragesser/myapp
ADD myapp-mem/go.mod .
ADD myapp-mem/main.go .
RUN go mod tidy

FROM mem-source AS mem-build
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GOFLAGS=-buildvcs=false go build \
    -ldflags='-w -s -extldflags "-static"' -a \
    -o /go/bin/myapp-mem .

FROM golang:alpine AS cpu-source
WORKDIR $GOPATH/src/github.com/christiantragesser/myapp
ADD myapp-cpu/go.mod .
ADD myapp-cpu/main.go .
RUN go mod tidy

FROM cpu-source AS cpu-build
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GOFLAGS=-buildvcs=false go build \
    -ldflags='-w -s -extldflags "-static"' -a \
    -o /go/bin/myapp-cpu .

## container image ##
FROM alpine AS publish
RUN apk add --no-cache stress-ng
COPY --from=mem-build /go/bin/myapp-mem /usr/local/bin/myapp-mem
COPY --from=cpu-build /go/bin/myapp-cpu /usr/local/bin/myapp-cpu

CMD [ "myapp-mem" ]